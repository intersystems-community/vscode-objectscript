{
  "ClassMethod definition": {
    "prefix": "ClassMethod",
    "body": [
      "/// ${1:Description}",
      "ClassMethod ${2:MethodName}($3) As ${4:%Status}",
      "{",
        "\tSet ${5:sc} = \\$\\$\\$OK",
        "\t${0:// do something}",
        "\tReturn $5",
      "}"
    ]
  },
  "Method definition": {
    "prefix": "Method",
    "body": [
      "/// ${1:Description}",
      "Method ${2:MethodName}($3) As ${4:%Status}",
      "{",
        "\tSet ${5:sc} = \\$\\$\\$OK",
        "\t${0:// do something}",
        "\tReturn $5",
      "}"
    ]
  },
  "Property": {
    "prefix": "Property",
    "body": [
      "/// ${1:Description}",
      "Property ${2:PropertyName} As ${3:%String};"
    ]
  },
  "Projection": {
    "prefix": "Projection",
    "body": [
      "/// ${1:Description}",
      "Projection ${2:ProjectionName} As ${3:PackageName.ProjectionClassName};"
    ]
  },
  "Unique Property": {
    "prefix": ["Unique", "Property"],
    "body": [
      "/// ${1:Description}",
      "Property ${2:PropertyName} As ${3:%String};",
      "",
      "Index $2Index On $2 [Unique];"
    ]
  },
  "Always-Computed Property": {
    "prefix": ["Computed", "Property"],
    "body" : [
      "/// ${1:Description}",
      "Property ${2:PropertyName} As ${3:%String} [Calculated, SqlComputed, SqlComputeCode =",
        "\t{Set {$2} = {${4:expression}}}",
      "];"
    ]
  },
  "Date/Time Property": {
    "prefix": ["Date", "Time", "Property"],
    "body" : [
      "/// ${1:Description}",
      "Property ${2:PropertyName} As ${3|%Date,%Time|}(MINVAL = $4, MAXVAL = $5);"
    ]
  },
  "Parameter": {
    "prefix": "Parameter",
    "body": [
      "/// ${1:Description}",
      "Parameter ${2:PARAMETERNAME} = \"$0\";"
    ]
  },
  "Index": {
    "prefix": "Index",
    "body": [
      "/// ${1:Description}",
      "Index ${2:IndexName} On ${3:property};"
    ]
  },
  "Unique Index": {
    "prefix": "Index",
    "body": [
      "/// ${1:Description}",
      "Index ${2:IndexName} On ${3:property} [Unique];"
    ],
    "description": "Unique Index"
  },
  "Basic Class Query": {
    "prefix":["Query"],
    "body":[
      "/// ${1:Description}",
      "Query ${2:QueryName}($3) As %SQLQuery [ SqlProc ]",
      "{",
        "\tSELECT ${4:select-items}",
        "\tFROM ${5:table-refs}",
        "\tWHERE ${6:condition-expression}",
        "\tORDER BY ${7:ordering-items}",
      "}"
    ],
    "description": "Basic class query (%SQLQuery)"
  },
  "Custom Class Query": {
    "prefix":["Query"],
    "body":[
      "/// ${1:Description}",
      "Query ${2:QueryName}($3) As %Query(ROWSPEC = \"$4\") [ SqlProc ]",
      "{",
      "}",
      "",
      "ClassMethod ${2:QueryName}Execute(ByRef qHandle As %Binary${3/(\\s)|(.*)/${2:+, }$2/}) As %Status",
      "{",
      "\tQuit \\$\\$\\$OK",
      "}",
      "",
      "ClassMethod ${2:QueryName}Close(ByRef qHandle As %Binary) As %Status [ PlaceAfter = ${2:QueryName}Execute ]",
      "{",
      "\tQuit \\$\\$\\$OK",
      "}",
      "",
      "ClassMethod ${2:QueryName}Fetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = ${2:QueryName}Execute ]",
      "{",
      "\tQuit \\$\\$\\$OK",
      "}"
    ],
    "description": "Custom class query (%Query)"
  },
  "Trigger": {
    "prefix": "Trigger",
    "body": [
      "/// ${1:Description}",
      "Trigger ${2:TriggerName} [Event=${3|INSERT,UPDATE,DELETE|}, Time=${4|BEFORE,AFTER|}, Foreach=${5|row/object,row,statement|}]",
      "{",
        "\t${0:// do something}",
      "}"
    ],
    "description": "Trigger"
  },
  "ForeignKey": {
    "prefix": "ForeignKey",
    "body": [
      "/// ${1:Description}",
      "ForeignKey ${2:ForeignKeyName}(${3:property}) References ${4:referencedClass}(${5:refIndex});"
    ],
    "description": "ForeignKey"
  },
  "Relationship": {
    "prefix": ["Relationship"],
    "body": [
      "/// ${1:Description}",
      "Relationship ${2:RelationshipName} As ${3:classname} [ Cardinality = ${4|one,many,parent,children|}, Inverse = ${5:correspondingProperty} ];"
    ],
    "description": "Relationship"
  },
  "XData": {
    "prefix": "XData",
    "body": [
      "/// ${1:Description}",
      "XData ${2:XDataName}",
      "{",
      "$0",
      "}"
    ],
    "description": "XData"
  },
    "Production": {
        "prefix": ["Production","Interoperability","ClassProduction"],
        "body": [
          "/// ${1:Description}",
          "Class ${2:${TM_DIRECTORY/^.+[\\/\\\\](.*)$/$1/}.$TM_FILENAME_BASE} Extends Ens.Production",
          "{",
          "",
          "XData ProductionDefinition",
          "{",
            "\t<Production Name=\"$2\">",
              "\t\t<ActorPoolSize>2</ActorPoolSize>",
              "\t\t<Item ClassName=\"$3\" Name=\"$4\" PoolSize=\"1\"/>",
            "\t</Production>",
          "}",
          "}"
        ],
        "description": "Production Definition"
    },
    "Request": {
        "prefix": ["Request","Interoperability","ClassRequest"],
        "body": [
          "/// ${1:Description}",
          "Class ${2:${TM_DIRECTORY/^.+[\\/\\\\](.*)$/$1/}.$TM_FILENAME_BASE} Extends Ens.Request",
          "{",
          "$0",
          "}"
        ],
        "description": "Request Message Definition"
    },
    "Response": {
        "prefix": ["Response","Interoperability","ClassResponse"],
        "body": [
          "/// ${1:Description}",
          "Class ${2:${TM_DIRECTORY/^.+[\\/\\\\](.*)$/$1/}.$TM_FILENAME_BASE} Extends Ens.Response",
          "{",
          "$0",
          "}"
        ],
        "description": "Response Message Definition"
    }
}
