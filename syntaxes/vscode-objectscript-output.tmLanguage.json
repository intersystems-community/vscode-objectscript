{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "vscode-objectscript-output",
  "scopeName": "source.vscode_objectscript_output",
  "patterns": [
    {
      "match": "^\\s*(?:\\> )?(?:ERROR).*\\#\\d+\\:",
      "name": "invalid"
    },
    {
      "match": "^\\s*(?:ERROR)\\s*\\:",
      "name": "invalid"
    },
    {
      "match": "^\\s*(?:Authorization error\\:)",
      "name": "invalid"
    },
    {
      "match": "^Detected \\d+ errors during compilation in \\S+",
      "name": "invalid"
    },
    {
      "match": "^Compilation finished successfully in \\S+",
      "name": "markup.bold"
    },
    {
      "match": "(?<=^Compiling (?:class|routine|file|table) \\:? ?)[^\\:\\s]+",
      "name": "entity.name.class"
    },
    {
      "match": "(?<=^Deleting (?:class|routine|file|table) )\\S+",
      "name": "entity.name.class"
    },
    {
      "match": "(?<=^Dropping orphaned procedure\\: )\\S+",
      "name": "entity.name.class"
    },
    {
      "match": "(?<=^(?:Class|Routine|File|Table) )\\S+(?= is up-to-date\\.)",
      "name": "entity.name.class"
    },
    {
      "match": "\\S+(?= is up to date\\. Compile of this item skipped\\.)",
      "name": "entity.name.class"
    },
    {
      "match": "(?<=^\\s*ERROR\\:\\s*)\\S+",
      "name": "entity.name.class"
    },
    {
      "match": "\"(.*?)\"",
      "name": "string.quoted"
    },
    {
      "match": "'(.*?)'",
      "name": "string.quoted"
    },
    {
      "match": "\\b(((0|1)?[0-9][1-2]?)|(Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sept(ember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?))[/|\\-|\\.| ]([0-2]?[0-9]|[3][0-1])[/|\\-|\\.| ]((19|20)?[0-9]{2})\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b((19|20)?[0-9]{2}[/|\\-|\\.| ](((0|1)?[0-9][1-2]?)|(Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sept(ember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?))[/|\\-|\\.| ]([0-2]?[0-9]|[3][0-1]))\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b([0-2]?[0-9]|[3][0-1])[/|\\-|\\.| ](((0|1)?[0-9][1-2]?)|(Jan(uary)?|Feb(ruary)?|Mar(ch)?|Apr(il)?|May|Jun(e)?|Jul(y)?|Aug(ust)?|Sept(ember)?|Oct(ober)?|Nov(ember)?|Dec(ember)?))[/|\\-|\\.| ]((19|20)?[0-9]{2})\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b([0|1]?[0-9]|2[0-3])\\:[0-5][0-9](\\:[0-5][0-9])?( ?(?i:(a|p)m?))?( ?[+-]?[0-9]*)?\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b\\d+\\.?\\d*?\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b(?i:(0?x)?[0-9a-f][0-9a-f]+)\\b",
      "name": "constant.numeric"
    },
    {
      "match": "^WARNING:",
      "name": "invalid"
    },
    {
      "match": "^NOTE:",
      "name": "string.quoted"
    }
  ]
}
